# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  # config.vm.box = "Ubuntu Server 16.04.2 LTS 64-bit Vanilla.box"
  config.vm.box = "ubuntu/xenial64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
    # Customize the amount of memory on the VM:
    vb.memory = "2048"
  end

  # Configure the SSH username and password that Vagrant should use
  # config.ssh.username = "sysadm"
  # config.ssh.password = "password"

  # Update repo cache, upgrade and install basic software
  config.vm.provision "shell", inline: <<-SHELL
    # Wait for any initial APT/DPKG tasks in a new VM to complete
    export continueWaiting=1

    while [ $continueWaiting -ge 1 ]; do \
      fuser /var/lib/dpkg/lock; \
      if [ $? -eq 0 ]; then \
        sleep 5; \
      else \
        continueWaiting=0; \
      fi; \
    done

    apt-get update
    apt-get -y upgrade
    
    apt-get -y install openssh-server open-vm-tools-desktop \
      xfce4 lightdm lightdm-gtk-greeter gnome-terminal \
      firefox git docker golang expect
  SHELL

  # Install additional 3rd party software
  config.vm.provision "shell", path: "install-google-chrome.sh"
  config.vm.provision "shell", path: "install-visual-studio-code.sh"
  config.vm.provision "shell", path: "install-crashplan.sh"
  config.vm.provision "shell", path: "configure-inotify-limits.sh"
end
